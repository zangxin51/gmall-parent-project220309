一、业务知识
1、商品分类
作用：帮助用户在查询商品时缩小范围。
结构：一级分类、二级分类、三级分类
	一级分类下查找二级分类（一对多）
	二级分类下查找三级分类（一对多）

2、平台属性
概念：同一类商品不管是什么品牌、不管属于什么厂商都必须具备的属性——由销售平台来维护。
结构：一个平台属性名对应多个平台属性值

3、销售属性
本质作用：根据不同销售属性的组合定位到一款具体的商品。
具体是有多具体呢？要具体到能够到仓库找到这个编号的商品，去看到这个编号下商品有多少件库存。

数据举例：
	SPU（狭义）	销售属性（颜色）	销售属性（版本）	SKU-id
	HW-P50		雪域白				8+128           	100026819198
	HW-P50		雪域白				8+256           	100026819222
	HW-P50		曜金黑				8+128           	100014453195
	HW-P50		曜金黑				8+256           	100026819200
	HW-P50		可可茶金			8+128           	100014453207
	HW-P50		可可茶金			8+256           	100014453209

销售属性名和销售属性值：一对多关联关系

4、SKU
基本库存单元，只要确定了一个SKU的编号（数据库中的sku_id）就可以到仓库中去清点商品的库存。
也就是说SKU的编号值能够确定一个具体的商品。

5、SPU
一组可复用、易检索的商品信息单元。
广义SPU概念：某个比较笼统的商品描述。比如：手机、智能电视……（基本等同于三级分类）
	落实到数据库表其实就是三级分类
狭义SPU概念：某个品牌下商品的一个具体型号，对应数据库表就是SPU表。

二、搭建环境
参考课件

三、版本控制
http://heavy_code_industry.gitee.io/code_heavy_industry/pro008-Git/lecture/
1、初始化本地库
git init

2、查看当前本地库状态
git status

3、执行新资源的添加
git add --all

4、提交到本地库
git commit -m "2022年8月17日 0001 创建工程，引入依赖和加入基础设施完成"

5、远程库地址
https://gitee.com/heavy_code_industry/gmall-parent-project220309

6、获取代码步骤
●使用clone命令下载到本地
git clone https://gitee.com/heavy_code_industry/gmall-parent-project220309
●使用IDEA打开
●针对当前project设置Maven核心程序和本地库地址












